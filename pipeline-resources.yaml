AWSTemplateFormatVersion: 2010-09-09
Description: >
  v.1.0.0 Resources needed by CI/CD pipeline.
  This stack should never be executed manually.
Parameters:
  AppName:
    Type: String
  InputTemplate:
    Type: String
  CodeBuildImage:
    Type: String
  GitHubRepoName:
    Type: String
  GitHubRepoBranch:
    Type: String
  GitHubUser:
    Type: String
  GitHubToken:
    NoEcho: true
    Type: String
  BusinessUnit:
    Type: String
  CostUnit:
    Type: String
  SolutionName:
    Type: String
  CodePipelineRoleArn:
    Type: String
  CloudformationRoleArn:
    Type: String
  CodeBuildRoleArn:
    Type: String
Resources:
  S3Bucket:
    Description: Creating Amazon S3 bucket for AWS CodePipeline artifacts'
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'app-${AppName}-${AWS::AccountId}-${AWS::Region}'
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: BusinessUnit
          Value: !Ref BusinessUnit
        - Key: CostUnit
          Value: !Ref CostUnit
        - Key: SolutionName
          Value: !Ref SolutionName
  S3ArtifactBucketPolicy:
    DependsOn:
      - S3Bucket
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Id: SSEAndSSLPolicy
        Statement:
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false
  CodeBuildProject:
    Description: Creating AWS CodeBuild project
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub 'Building stage for ${AppName}.'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !Ref S3Bucket
          - Name: TEMPLATE_NAME
            Value: !Ref InputTemplate
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
      Name: !Sub '${AppName}-build'
      ServiceRole: !Ref CodeBuildRoleArn
      Source:
        Type: CODEPIPELINE
      Tags:
        - Key: app-name
          Value: !Ref AppName
        - Key: BusinessUnit
          Value: !Ref BusinessUnit
        - Key: CostUnit
          Value: !Ref CostUnit
        - Key: SolutionName
          Value: !Ref SolutionName
      TimeoutInMinutes: 5
  ProjectPipeline:
    DependsOn:
      - S3Bucket
      - CodeBuildProject
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Sub '${AppName}-pipeline'
      RoleArn: !Ref CodePipelineRoleArn
      Stages:
        - Name: Source
          Actions:
            - Name: source
              InputArtifacts: []
              ActionTypeId:
                Version: '1'
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
              OutputArtifacts:
                - Name: !Sub '${AppName}-SourceArtifact'
              Configuration:
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubRepoBranch
                OAuthToken: !Ref GitHubToken
                Owner: !Ref GitHubUser
              RunOrder: 1
        - Name: Test-and-Build
          Actions:
            - Name: build-from-source
              InputArtifacts:
                - Name: !Sub '${AppName}-SourceArtifact'
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: !Sub '${AppName}-BuildArtifact'
              Configuration:
                ProjectName: !Sub '${AppName}-build'
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: create-changeset
              InputArtifacts:
                - Name: !Sub '${AppName}-BuildArtifact'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              OutputArtifacts: []
              Configuration:
                StackName: !Sub '${AppName}-stack'
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Ref CloudformationRoleArn
                ChangeSetName: pipeline-changeset
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: !Sub '${AppName}-BuildArtifact::template-output.yaml'
              RunOrder: 1
            - Name: execute-changeset
              InputArtifacts: []
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              OutputArtifacts: []
              Configuration:
                StackName: !Sub '${AppName}-stack'
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset
              RunOrder: 2
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
